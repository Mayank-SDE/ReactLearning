{"ast":null,"code":"var _jsxFileName = \"/Users/mayankchoudhary/Desktop/Academind/React/SPAWithReactRouter/12-adv-starting-project/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams, useLoaderData } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetail = () => {\n  _s();\n  const params = useParams();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n};\n_s(EventDetail, \"83bg/f50vBzyoLkuhTA99J7W+qE=\", false, function () {\n  return [useParams, useLoaderData];\n});\n_c = EventDetail;\nexport default EventDetail;\nexport async function loader({\n  request,\n  params\n}) {\n  const eventId = params.eventId;\n  const response = await fetch(`http://localhost:8080/events/${eventId}`);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected events.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetail\");","map":{"version":3,"names":["React","useParams","useLoaderData","jsxDEV","_jsxDEV","EventDetail","_s","params","data","EventItem","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","eventId","response","fetch","ok","json","message","status","$RefreshReg$"],"sources":["/Users/mayankchoudhary/Desktop/Academind/React/SPAWithReactRouter/12-adv-starting-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import React from 'react';\nimport { useParams, useLoaderData } from 'react-router-dom';\nconst EventDetail = () => {\n  const params = useParams();\n\n  const data = useLoaderData();\n\n  return <EventItem event={data.event} />;\n};\n\nexport default EventDetail;\n\n\nexport async function loader({ request, params }) {\n\n  const eventId = params.eventId;\n  const response = await fetch(`http://localhost:8080/events/${eventId}`);\n\n  if (!response.ok) {\n    throw json({ message: 'Could not fetch details for selected events.' }, { status: 500 });\n  } else {\n\n\n    return response;\n  }\n\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5D,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,MAAM,GAAGN,SAAS,CAAC,CAAC;EAE1B,MAAMO,IAAI,GAAGN,aAAa,CAAC,CAAC;EAE5B,oBAAOE,OAAA,CAACK,SAAS;IAACC,KAAK,EAAEF,IAAI,CAACE;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzC,CAAC;AAACR,EAAA,CANID,WAAW;EAAA,QACAJ,SAAS,EAEXC,aAAa;AAAA;AAAAa,EAAA,GAHtBV,WAAW;AAQjB,eAAeA,WAAW;AAG1B,OAAO,eAAeW,MAAMA,CAAC;EAAEC,OAAO;EAAEV;AAAO,CAAC,EAAE;EAEhD,MAAMW,OAAO,GAAGX,MAAM,CAACW,OAAO;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BF,OAAQ,EAAC,CAAC;EAEvE,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMC,IAAI,CAAC;MAAEC,OAAO,EAAE;IAA+C,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC1F,CAAC,MAAM;IAGL,OAAOL,QAAQ;EACjB;AAEF;AAAC,IAAAJ,EAAA;AAAAU,YAAA,CAAAV,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}