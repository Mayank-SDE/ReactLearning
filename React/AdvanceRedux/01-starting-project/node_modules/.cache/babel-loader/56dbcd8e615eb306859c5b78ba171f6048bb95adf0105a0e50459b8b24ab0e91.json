{"ast":null,"code":"import { cartActions } from './cart-slice';\nimport { uiActions } from './ui-slice';\nexport const fetchCartData = () => {\n  console.log(\"fetch cart data\");\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://react-demo-7324d-default-rtdb.firebaseio.com/cart.json');\n      if (!response.ok) {\n        throw new Error(\"Could not able to fetch cart data.\");\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart(cartData));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Fetching cart data failed!'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://react-demo-7324d-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed.\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Sending cart data failed!'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["cartActions","uiActions","fetchCartData","console","log","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"sources":["/Users/mayankchoudhary/Desktop/Academind/React/AdvanceRedux/01-starting-project/src/store/cart-actions.js"],"sourcesContent":["import { cartActions } from './cart-slice';\nimport { uiActions } from './ui-slice';\n\nexport const fetchCartData = () => {\n    console.log(\"fetch cart data\");\n    return async (dispatch) => {\n\n        const fetchData = async () => {\n            const response = await fetch('https://react-demo-7324d-default-rtdb.firebaseio.com/cart.json');\n\n\n            if (!response.ok) {\n                throw new Error(\"Could not able to fetch cart data.\");\n            }\n\n            const data = await response.json();\n\n\n            return data;\n        }\n\n        try {\n\n            const cartData = await fetchData();\n            dispatch(cartActions.replaceCart(cartData));\n\n\n        } catch (error) {\n            dispatch(uiActions.showNotification({\n                status: 'error',\n                title: 'Error!',\n                message: 'Fetching cart data failed!'\n            }));\n        }\n\n    };\n}\n\nexport const sendCartData = (cart) => {\n\n    return async (dispatch) => {\n        dispatch(uiActions.showNotification({\n            status: 'pending',\n            title: 'Sending...',\n            message: 'Sending cart data!'\n        }));\n\n        const sendRequest = async () => {\n            const response = await fetch('https://react-demo-7324d-default-rtdb.firebaseio.com/cart.json', {\n                method: 'PUT',\n                body: JSON.stringify(cart)\n            });\n\n            if (!response.ok) {\n                throw new Error(\"Sending cart data failed.\");\n            }\n        }\n\n        try {\n\n            await sendRequest();\n            dispatch(uiActions.showNotification({\n                status: 'success',\n                title: 'Success!',\n                message: 'Sent cart data successfully!'\n            }));\n        } catch (error) {\n            dispatch(uiActions.showNotification({\n                status: 'error',\n                title: 'Error!',\n                message: 'Sending cart data failed!'\n            }));\n        }\n    };\n};"],"mappings":"AAAA,SAASA,WAAW,QAAQ,cAAc;AAC1C,SAASC,SAAS,QAAQ,YAAY;AAEtC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC/BC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAC9B,OAAO,MAAOC,QAAQ,IAAK;IAEvB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gEAAgE,CAAC;MAG9F,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;MACzD;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAGlC,OAAOD,IAAI;IACf,CAAC;IAED,IAAI;MAEA,MAAME,QAAQ,GAAG,MAAMP,SAAS,CAAC,CAAC;MAClCD,QAAQ,CAACL,WAAW,CAACc,WAAW,CAACD,QAAQ,CAAC,CAAC;IAG/C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZV,QAAQ,CAACJ,SAAS,CAACe,gBAAgB,CAAC;QAChCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACb,CAAC,CAAC,CAAC;IACP;EAEJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAElC,OAAO,MAAOhB,QAAQ,IAAK;IACvBA,QAAQ,CAACJ,SAAS,CAACe,gBAAgB,CAAC;MAChCC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACb,CAAC,CAAC,CAAC;IAEH,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,gEAAgE,EAAE;QAC3Fe,MAAM,EAAE,KAAK;QACbC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;MAC7B,CAAC,CAAC;MAEF,IAAI,CAACd,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAChD;IACJ,CAAC;IAED,IAAI;MAEA,MAAMY,WAAW,CAAC,CAAC;MACnBjB,QAAQ,CAACJ,SAAS,CAACe,gBAAgB,CAAC;QAChCC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACb,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACZV,QAAQ,CAACJ,SAAS,CAACe,gBAAgB,CAAC;QAChCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACb,CAAC,CAAC,CAAC;IACP;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}