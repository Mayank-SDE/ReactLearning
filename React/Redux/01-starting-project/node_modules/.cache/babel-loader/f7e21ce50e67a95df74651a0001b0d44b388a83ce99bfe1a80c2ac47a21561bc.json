{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\nexport default store;\n\n/*\nconst counterReducer = (state = initialState, action) => {\n    if (action.type === 'increment') {\n        return {\n            counter: state.counter + 1,\n            showCounter: state.showCounter\n        };\n    }\n\n    if (action.type === 'decrement') {\n        return {\n            counter: state.counter - 1,\n            showCounter: state.showCounter\n        };\n    }\n\n    if (action.type === 'increase') {\n        return {\n            counter: state.counter + action.amount,\n            showCounter: state.showCounter\n        };\n    }\n\n    if (action.type === 'toggle') {\n        return {\n            showCounter: !state.showCounter,\n            counter: state.counter\n        };\n    }\n\n    return state;\n};\n\n\nconst store = createStore(counterReducer);\n\nexport default store;\n*/\n\n/*\nconst counterSubscriber = () => {\n    const latestState = store.getState();\n\n    console.log(latestState);\n}\n\nstore.subscribe(counterSubscriber);\n\nstore.dispatch({\n    type: 'increment'\n});\n\nstore.dispatch({\n    type: 'decrement'\n});*/","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","decrement","toggleCounter","increase","action","payload","store","reducer","counterActions","actions"],"sources":["/Users/mayankchoudhary/Desktop/Academind/React/Redux/01-starting-project/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit';\n\nconst initialCounterState = {\n    counter: 0,\n    showCounter: true,\n\n};\n\n\nconst counterSlice = createSlice({\n    name: 'counter',\n    initialState: initialCounterState,\n    reducers: {\n\n        increment(state) {\n            state.counter++;\n        },\n        decrement(state) {\n            state.counter--;\n        },\n        toggleCounter(state) {\n            state.showCounter = !state.showCounter;\n        },\n        increase(state, action) {\n            state.counter = state.counter + action.payload;\n        },\n\n    }\n});\n\n\n\nconst store = configureStore({\n    reducer: counterSlice.reducer\n});\n\nexport const counterActions = counterSlice.actions;\n\nexport default store;\n\n/*\nconst counterReducer = (state = initialState, action) => {\n    if (action.type === 'increment') {\n        return {\n            counter: state.counter + 1,\n            showCounter: state.showCounter\n        };\n    }\n\n    if (action.type === 'decrement') {\n        return {\n            counter: state.counter - 1,\n            showCounter: state.showCounter\n        };\n    }\n\n    if (action.type === 'increase') {\n        return {\n            counter: state.counter + action.amount,\n            showCounter: state.showCounter\n        };\n    }\n\n    if (action.type === 'toggle') {\n        return {\n            showCounter: !state.showCounter,\n            counter: state.counter\n        };\n    }\n\n    return state;\n};\n\n\nconst store = createStore(counterReducer);\n\nexport default store;\n*/\n\n\n/*\nconst counterSubscriber = () => {\n    const latestState = store.getState();\n\n    console.log(latestState);\n}\n\nstore.subscribe(counterSubscriber);\n\nstore.dispatch({\n    type: 'increment'\n});\n\nstore.dispatch({\n    type: 'decrement'\n});*/"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,mBAAmB,GAAG;EACxBC,OAAO,EAAE,CAAC;EACVC,WAAW,EAAE;AAEjB,CAAC;AAGD,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC7BM,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEL,mBAAmB;EACjCM,QAAQ,EAAE;IAENC,SAASA,CAACC,KAAK,EAAE;MACbA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAE;MACbA,KAAK,CAACP,OAAO,EAAE;IACnB,CAAC;IACDS,aAAaA,CAACF,KAAK,EAAE;MACjBA,KAAK,CAACN,WAAW,GAAG,CAACM,KAAK,CAACN,WAAW;IAC1C,CAAC;IACDS,QAAQA,CAACH,KAAK,EAAEI,MAAM,EAAE;MACpBJ,KAAK,CAACP,OAAO,GAAGO,KAAK,CAACP,OAAO,GAAGW,MAAM,CAACC,OAAO;IAClD;EAEJ;AACJ,CAAC,CAAC;AAIF,MAAMC,KAAK,GAAGf,cAAc,CAAC;EACzBgB,OAAO,EAAEZ,YAAY,CAACY;AAC1B,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAGb,YAAY,CAACc,OAAO;AAElD,eAAeH,KAAK;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}