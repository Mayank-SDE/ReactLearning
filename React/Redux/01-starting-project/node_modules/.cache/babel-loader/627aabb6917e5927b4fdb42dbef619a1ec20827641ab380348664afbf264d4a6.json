{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\nconst store = configureStore({\n  reducer: authSlice.reducer\n});\nexport const authActions = authSlice.actions;\nexport default store;\n\n/*\nconst counterReducer = (state = initialState, action) => {\n    if (action.type === 'increment') {\n        return {\n            counter: state.counter + 1,\n            showCounter: state.showCounter\n        };\n    }\n\n    if (action.type === 'decrement') {\n        return {\n            counter: state.counter - 1,\n            showCounter: state.showCounter\n        };\n    }\n\n    if (action.type === 'increase') {\n        return {\n            counter: state.counter + action.amount,\n            showCounter: state.showCounter\n        };\n    }\n\n    if (action.type === 'toggle') {\n        return {\n            showCounter: !state.showCounter,\n            counter: state.counter\n        };\n    }\n\n    return state;\n};\n\n\nconst store = createStore(counterReducer);\n\nexport default store;\n*/\n\n/*\nconst counterSubscriber = () => {\n    const latestState = store.getState();\n\n    console.log(latestState);\n}\n\nstore.subscribe(counterSubscriber);\n\nstore.dispatch({\n    type: 'increment'\n});\n\nstore.dispatch({\n    type: 'decrement'\n});*/","map":{"version":3,"names":["createSlice","configureStore","initialAuthState","isAuthenticated","authSlice","name","initialState","reducers","login","state","logout","store","reducer","authActions","actions"],"sources":["/Users/mayankchoudhary/Desktop/Academind/React/Redux/01-starting-project/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit';\n\n\n\n\n\nconst initialAuthState = {\n    isAuthenticated: false\n};\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState: initialAuthState,\n    reducers: {\n        login(state) {\n            state.isAuthenticated = true;\n        },\n        logout(state) {\n            state.isAuthenticated = false;\n        }\n    }\n});\n\n\n\nconst store = configureStore({\n    reducer: authSlice.reducer\n});\n\n\nexport const authActions = authSlice.actions;\n\nexport default store;\n\n/*\nconst counterReducer = (state = initialState, action) => {\n    if (action.type === 'increment') {\n        return {\n            counter: state.counter + 1,\n            showCounter: state.showCounter\n        };\n    }\n\n    if (action.type === 'decrement') {\n        return {\n            counter: state.counter - 1,\n            showCounter: state.showCounter\n        };\n    }\n\n    if (action.type === 'increase') {\n        return {\n            counter: state.counter + action.amount,\n            showCounter: state.showCounter\n        };\n    }\n\n    if (action.type === 'toggle') {\n        return {\n            showCounter: !state.showCounter,\n            counter: state.counter\n        };\n    }\n\n    return state;\n};\n\n\nconst store = createStore(counterReducer);\n\nexport default store;\n*/\n\n\n/*\nconst counterSubscriber = () => {\n    const latestState = store.getState();\n\n    console.log(latestState);\n}\n\nstore.subscribe(counterSubscriber);\n\nstore.dispatch({\n    type: 'increment'\n});\n\nstore.dispatch({\n    type: 'decrement'\n});*/"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAM9D,MAAMC,gBAAgB,GAAG;EACrBC,eAAe,EAAE;AACrB,CAAC;AAED,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC1BK,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEJ,gBAAgB;EAC9BK,QAAQ,EAAE;IACNC,KAAKA,CAACC,KAAK,EAAE;MACTA,KAAK,CAACN,eAAe,GAAG,IAAI;IAChC,CAAC;IACDO,MAAMA,CAACD,KAAK,EAAE;MACVA,KAAK,CAACN,eAAe,GAAG,KAAK;IACjC;EACJ;AACJ,CAAC,CAAC;AAIF,MAAMQ,KAAK,GAAGV,cAAc,CAAC;EACzBW,OAAO,EAAER,SAAS,CAACQ;AACvB,CAAC,CAAC;AAGF,OAAO,MAAMC,WAAW,GAAGT,SAAS,CAACU,OAAO;AAE5C,eAAeH,KAAK;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}