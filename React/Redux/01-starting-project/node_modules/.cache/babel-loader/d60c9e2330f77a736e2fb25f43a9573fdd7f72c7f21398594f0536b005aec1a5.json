{"ast":null,"code":"var _jsxFileName = \"/Users/mayankchoudhary/Desktop/Academind/React/Redux/01-starting-project/src/components/Counter.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from 'react-redux';\nimport classes from './Counter.module.css';\nimport { counterActions } from '../Counter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = () => {\n  _s();\n  const counter = useSelector(state => state.counter.counter);\n  const showCounter = useSelector(state => state.counter.showCounter);\n  const dispatch = useDispatch();\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n  const increaseHandler = () => {\n    dispatch(counterActions.increase(10));\n  };\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggleCounter());\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), showCounter && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementHandler,\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increaseHandler,\n        children: \"Increment By 5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrementHandler,\n        children: \"Decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Counter, \"IwOLicdTrYJkh91+ARWTVuVXcmI=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Counter;\nexport default Counter;\n/*\nclass Counter extends Component {\n\n  incrementHandler() {\n\n    this.props.increment();\n\n  }\n\n  decrementHandler() {\n\n    this.props.decrement();\n  }\n\n  toggleCounterHandler() {\n\n  }\n\n  render() {\n    return <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>{this.props.counter}</div>\n      <div>\n        <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n        <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n      </div>\n      <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n    </main>;\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    counter: state.counter,\n  }\n};\nconst mapDispatchToProps = (dispatch) => {\n\n  return {\n    increment: () => dispatch({ type: 'increment' }),\n    decrement: () => dispatch({ type: 'decrement' }),\n\n  };\n\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\n\n// coonnect also wants two arguments as an function \n\n// The first funcion that maps state to props\n\n// the second function is mapDispatchToProps that means we are adding the dispatch function in the props.\n\n*/\nvar _c;\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["useSelector","useDispatch","classes","counterActions","jsxDEV","_jsxDEV","Counter","_s","counter","state","showCounter","dispatch","incrementHandler","increment","decrementHandler","decrement","increaseHandler","increase","toggleCounterHandler","toggleCounter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onClick","_c","$RefreshReg$"],"sources":["/Users/mayankchoudhary/Desktop/Academind/React/Redux/01-starting-project/src/components/Counter.js"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\nimport classes from './Counter.module.css';\nimport { counterActions } from '../Counter';\n\nconst Counter = () => {\n\n  const counter = useSelector(state => state.counter.counter);\n  const showCounter = useSelector(state => state.counter.showCounter);\n  const dispatch = useDispatch();\n\n  const incrementHandler = () => {\n    dispatch(counterActions.increment());\n  };\n  const decrementHandler = () => {\n    dispatch(counterActions.decrement());\n  };\n\n  const increaseHandler = () => {\n    dispatch(counterActions.increase(10));\n  };\n\n  const toggleCounterHandler = () => {\n\n    dispatch(counterActions.toggleCounter());\n  };\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      {showCounter && <div className={classes.value}>{counter}</div>}\n      <div>\n        <button onClick={incrementHandler}>Increment</button>\n        <button onClick={increaseHandler}>Increment By 5</button>\n        <button onClick={decrementHandler}>Decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n/*\nclass Counter extends Component {\n\n  incrementHandler() {\n\n    this.props.increment();\n\n  }\n\n  decrementHandler() {\n\n    this.props.decrement();\n  }\n\n  toggleCounterHandler() {\n\n  }\n\n  render() {\n    return <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>{this.props.counter}</div>\n      <div>\n        <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n        <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n      </div>\n      <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n    </main>;\n  }\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    counter: state.counter,\n  }\n};\nconst mapDispatchToProps = (dispatch) => {\n\n  return {\n    increment: () => dispatch({ type: 'increment' }),\n    decrement: () => dispatch({ type: 'decrement' }),\n\n  };\n\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\n\n// coonnect also wants two arguments as an function \n\n// The first funcion that maps state to props\n\n// the second function is mapDispatchToProps that means we are adding the dispatch function in the props.\n\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}