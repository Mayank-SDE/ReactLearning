{"ast":null,"code":"// import { createSlice, configureStore } from '@reduxjs/toolkit';\n\n// const initialAuthState = {\n//     isAuthenticated: false\n// };\n\n// const authSlice = createSlice({\n//     name: 'auth',\n//     initialState: initialAuthState,\n//     reducers: {\n//         login(state) {\n//             state.isAuthenticated = true;\n//         },\n//         logout(state) {\n//             state.isAuthenticated = false;\n//         }\n//     }\n// });\n\n// const store = configureStore({\n//     reducer: authSlice.reducer\n// });\n\n// export const authActions = authSlice.actions;\n\n// export default store;\n\n/*\nconst counterReducer = (state = initialState, action) => {\n    if (action.type === 'increment') {\n        return {\n            counter: state.counter + 1,\n            showCounter: state.showCounter\n        };\n    }\n\n    if (action.type === 'decrement') {\n        return {\n            counter: state.counter - 1,\n            showCounter: state.showCounter\n        };\n    }\n\n    if (action.type === 'increase') {\n        return {\n            counter: state.counter + action.amount,\n            showCounter: state.showCounter\n        };\n    }\n\n    if (action.type === 'toggle') {\n        return {\n            showCounter: !state.showCounter,\n            counter: state.counter\n        };\n    }\n\n    return state;\n};\n\n\nconst store = createStore(counterReducer);\n\nexport default store;\n*/\n\n/*\nconst counterSubscriber = () => {\n    const latestState = store.getState();\n\n    console.log(latestState);\n}\n\nstore.subscribe(counterSubscriber);\n\nstore.dispatch({\n    type: 'increment'\n});\n\nstore.dispatch({\n    type: 'decrement'\n});*/","map":{"version":3,"names":[],"sources":["/Users/mayankchoudhary/Desktop/Academind/React/Redux/01-starting-project/src/store/index.js"],"sourcesContent":["// import { createSlice, configureStore } from '@reduxjs/toolkit';\n\n\n\n\n\n// const initialAuthState = {\n//     isAuthenticated: false\n// };\n\n// const authSlice = createSlice({\n//     name: 'auth',\n//     initialState: initialAuthState,\n//     reducers: {\n//         login(state) {\n//             state.isAuthenticated = true;\n//         },\n//         logout(state) {\n//             state.isAuthenticated = false;\n//         }\n//     }\n// });\n\n\n\n// const store = configureStore({\n//     reducer: authSlice.reducer\n// });\n\n\n// export const authActions = authSlice.actions;\n\n// export default store;\n\n/*\nconst counterReducer = (state = initialState, action) => {\n    if (action.type === 'increment') {\n        return {\n            counter: state.counter + 1,\n            showCounter: state.showCounter\n        };\n    }\n\n    if (action.type === 'decrement') {\n        return {\n            counter: state.counter - 1,\n            showCounter: state.showCounter\n        };\n    }\n\n    if (action.type === 'increase') {\n        return {\n            counter: state.counter + action.amount,\n            showCounter: state.showCounter\n        };\n    }\n\n    if (action.type === 'toggle') {\n        return {\n            showCounter: !state.showCounter,\n            counter: state.counter\n        };\n    }\n\n    return state;\n};\n\n\nconst store = createStore(counterReducer);\n\nexport default store;\n*/\n\n\n/*\nconst counterSubscriber = () => {\n    const latestState = store.getState();\n\n    console.log(latestState);\n}\n\nstore.subscribe(counterSubscriber);\n\nstore.dispatch({\n    type: 'increment'\n});\n\nstore.dispatch({\n    type: 'decrement'\n});*/"],"mappings":"AAAA;;AAMA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}